import Head from 'next/head';
import { useEffect, useReducer, useState } from 'react';
import { BiPlus } from 'react-icons/bi';
import { BiXCircle } from 'react-icons/bi';
import Table from '../components/table';
import { useSelector, useDispatch } from 'react-redux';
import { addAction, resetAction } from '../redux/toggleSlice';
import AddForm from '../components/addForm';
import UpdateForm from '../components/updateProductForm';
import api from '../pages/api/axios'
import { deleteAction } from '../redux/reducer';

const reducerFunction = (state, event) => {
  return {
    ...state,
    [event.target?.name]: event.target?.value,
  };
};
export default function Home() {
  const [formData, setFormData] = useReducer(reducerFunction, {});
  const [data, setData] = useState(null);
  const dispatch = useDispatch();
  const flag = useSelector((state) => state.toggleAction.client.flag);
  const baseURL = 'http://localhost:8080/';
  const deleteId = useSelector((state) => state.app.client.deleteId);
  
  //fetching Data
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await api.get(baseURL)
        setData(response.data)
      
      } catch (err) {
        if(err.response){
          console.log(err.response.data);
          console.log(err.response.status);
          console.log(err.response.headers);
        } else {
          console.log(`Error: ${err.message}`);
        }
      }
    }
    fetchData()
  },[])
    // Posting data
 
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (Object.keys(formData).length == 0) return console.log('no form data');
  try {
    const response =   await api
    .post(baseURL, {
      code: formData.code,
      category: formData.category,
      qmade: formData.qmade,
      price: formData.price,
      cost: formData.cost,
    })
    const allData = [...data, response.data]
    setData(allData)
  } catch (error) {
    console.log(`Error: ${error.message}`);
  }  
  };
 // Deleting data
 
 const handleDelete = async () => {
  if(deleteId){
    try { 
      console.log(deleteId);
       await api.delete(`/?productId=${deleteId}`)
       const dataList = data.filter( item => item.deleteId !== deleteId)
       setData(dataList)
      } catch (err) {
        console.log(`Error: ${err.message}`);
      }
  }
 
} 


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className=" text-5xl font-semibold pl-5 py-8">
          Inventory Management
        </div>

        <div className="container mx-auto flex justify-between py-5 border-b">
          <div className=" flex w-full justify-between">
            <div>
              <button
                onClick={() => dispatch(addAction())}
                className="flex bg-indigo-500 text-white px-4 py-2 border rounded-md hover:bg-gray-50 hover:border-indigo-500 hover:text-gray-800"
              >
                Add new product{' '}
                <span className="px-1">
                  <BiPlus size={23}></BiPlus>
                </span>
              </button>
            </div>
            {flag > 0 ? (
              <BiXCircle
                className=" cursor-pointer text-2xl hover:text-4xl"
                onClick={() => dispatch(resetAction())}
              />
            ) : (
              <></>
            )}
          </div>
        </div>
        {flag == 1 ? <AddForm formData={formData} setFormData={setFormData} handleSubmit={handleSubmit}/> : flag == 2 ? <UpdateForm /> : <></>}
        <div className=" container mx-auto">
          <Table data={data} setData={setData} handleDelete={handleDelete}/>
        </div>
      </main>
    </>
  );
}
